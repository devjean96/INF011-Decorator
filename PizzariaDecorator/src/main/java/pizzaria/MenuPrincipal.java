/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pizzaria;

import decorators.AzeitonaDecorator;
import decorators.QueijoDecorator;
import interfaces.PizzaComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author jeanp
 */
public class MenuPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        String[] itemsDecorators = {"Queijo", "Presunto", "Azeitona", "Bacon", "Atum"};
        for (int i = 0; i < itemsDecorators.length; i++) {
            listDecorators.add(itemsDecorators[i], i);
        }
        PizzaComponent pizza = new QueijoDecorator(new AzeitonaDecorator(new PizzaBasica()));
        pizza.preparar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        listDecorators = new java.awt.List();
        buttonSelect = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        buttonUp = new javax.swing.JButton();
        buttonDown = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonGenerate = new javax.swing.JButton();
        listDecoratorsSelecteds = new java.awt.List();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(listDecorators, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 120, 200));

        buttonSelect.setText(">");
        buttonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectActionPerformed(evt);
            }
        });
        jPanel1.add(buttonSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, -1, -1));

        buttonRemove.setText("<");
        buttonRemove.setEnabled(false);
        buttonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveActionPerformed(evt);
            }
        });
        jPanel1.add(buttonRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));

        buttonUp.setText("Sobe");
        buttonUp.setEnabled(false);
        buttonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpActionPerformed(evt);
            }
        });
        jPanel1.add(buttonUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 53, 61, -1));

        buttonDown.setText("Desce");
        buttonDown.setEnabled(false);
        buttonDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDownActionPerformed(evt);
            }
        });
        jPanel1.add(buttonDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 87, -1, -1));

        jLabel1.setText("Decorators Disponiveis");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 23, -1, -1));

        jLabel2.setText("Decorators Selecionados");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 23, -1, -1));

        buttonGenerate.setText("Gerar");
        buttonGenerate.setEnabled(false);
        jPanel1.add(buttonGenerate, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, -1, -1));

        listDecoratorsSelecteds.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDecoratorsSelectedsMouseClicked(evt);
            }
        });
        jPanel1.add(listDecoratorsSelecteds, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 120, 200));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Pizzaria Decorator");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(126, 126, 126))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectActionPerformed
        listDecoratorsSelecteds.add(listDecorators.getSelectedItem());
    
        buttonRemove.setEnabled(((!buttonRemove.isEnabled()) && (0 != listDecoratorsSelecteds.getItems().length)
                || (buttonRemove.isEnabled()) && (0 != listDecoratorsSelecteds.getItems().length)));

        if (1 < listDecoratorsSelecteds.getItems().length) {
            buttonUp.setEnabled(true);
            buttonDown.setEnabled(true);
        }
        buttonGenerate.setEnabled(0 < listDecoratorsSelecteds.getItems().length);

    }//GEN-LAST:event_buttonSelectActionPerformed

    private void buttonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveActionPerformed
        if (0 <= listDecoratorsSelecteds.getSelectedIndex()) {
            listDecoratorsSelecteds.remove(listDecoratorsSelecteds.getSelectedIndex());

            buttonRemove.setEnabled(!(0 == listDecoratorsSelecteds.getItems().length));
            if (1 >= listDecoratorsSelecteds.getItems().length) {
                buttonUp.setEnabled(false);
                buttonDown.setEnabled(false);
            }
            buttonGenerate.setEnabled(1 <= listDecoratorsSelecteds.getItems().length);
        } else {
            JOptionPane.showMessageDialog(jPanel1, "Selecione um item adicionado para remover");
        }

    }//GEN-LAST:event_buttonRemoveActionPerformed

    private void buttonDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDownActionPerformed
        if (0 <= listDecoratorsSelecteds.getSelectedIndex()) {
            if (!isLastItem()) {
                int indice = listDecoratorsSelecteds.getSelectedIndex();
                String item = listDecoratorsSelecteds.getSelectedItem();
                String itemAux = listDecoratorsSelecteds.getItem(listDecoratorsSelecteds.getSelectedIndex() + 1);
                listDecoratorsSelecteds.remove(indice + 1);
                listDecoratorsSelecteds.add(item, indice + 1);
                listDecoratorsSelecteds.remove(indice);
                listDecoratorsSelecteds.add(itemAux, indice);
            }
        } else {
            JOptionPane.showMessageDialog(jPanel1, "Selecione um item adicionado para descer");
        }


    }//GEN-LAST:event_buttonDownActionPerformed

    private void listDecoratorsSelectedsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDecoratorsSelectedsMouseClicked
        buttonDown.setEnabled(!isLastItem());
        buttonUp.setEnabled(!isFirstItem());
    }//GEN-LAST:event_listDecoratorsSelectedsMouseClicked

    private void buttonUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpActionPerformed
        if (0 <= listDecoratorsSelecteds.getSelectedIndex()) {
            if (!isFirstItem()) {
                int indice = listDecoratorsSelecteds.getSelectedIndex();
                String item = listDecoratorsSelecteds.getSelectedItem();
                String itemAux = listDecoratorsSelecteds.getItem(indice - 1);
                listDecoratorsSelecteds.remove(indice - 1);
                listDecoratorsSelecteds.add(item, indice - 1);
                listDecoratorsSelecteds.remove(indice);
                listDecoratorsSelecteds.add(itemAux, indice);
            }
        } else {
            JOptionPane.showMessageDialog(jPanel1, "Selecione um item adicionado para subir");
        }
    }//GEN-LAST:event_buttonUpActionPerformed

    private boolean isLastItem() {
        return listDecoratorsSelecteds.getSelectedIndex() == (listDecoratorsSelecteds.getItems().length - 1);
    }

    private boolean isFirstItem() {
        return 0 == listDecoratorsSelecteds.getSelectedIndex();
    }

//    private static void checkPluginDecorator(File file) throws Exception {
//
//        String extensaoArquivo = UtilArquivo.getFileExtension(file.getName());
//        String[] plugins = UtilArquivo.getAllPlugins();
//
//        int i;
//        URL[] jars = new URL[plugins.length];
//        for (i = 0; i < plugins.length; i++) {
//            jars[i] = (new File("./plugins/" + plugins[i])).toURL();
//        }
//        URLClassLoader ulc = new URLClassLoader(jars);
//        boolean existePlugin = false;
//        for (int j = 0; j < plugins.length; j++) {
//            String factoryName = UtilArquivo.getFactoryName(plugins[j]);
//            String namePlugin = UtilArquivo.getFactoryPlugin(plugins[j]);
//            if (namePlugin.equals(extensaoArquivo)) {
//                String className = factoryName.toLowerCase() + "." + factoryName;
//                Class metaFactory = Class.forName(className, true, ulc);
//
//                Method getInstance = metaFactory.getDeclaredMethod("getInstance");
//                IDEFactory factory = (IDEFactory) getInstance.invoke(null);
//
//                AppMain.createProducts(factory, file);
//                existePlugin = true;
//            }
//        }
//        if (!existePlugin) {
//            JOptionPane.showMessageDialog(null, "Não existe plugin que suporte este arquivo");
//        }
//    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDown;
    private javax.swing.JButton buttonGenerate;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JButton buttonSelect;
    private javax.swing.JButton buttonUp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private java.awt.List listDecorators;
    private java.awt.List listDecoratorsSelecteds;
    // End of variables declaration//GEN-END:variables
}
